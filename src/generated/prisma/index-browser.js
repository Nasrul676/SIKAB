
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('./runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.8.2
 * Query Engine version: 2060c79ba17c6bb9f5823312b6f6b7f4a845738e
 */
Prisma.prismaVersion = {
  client: "6.8.2",
  engine: "2060c79ba17c6bb9f5823312b6f6b7f4a845738e"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UsersScalarFieldEnum = {
  username: 'username',
  email: 'email',
  password: 'password',
  role: 'role',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  id: 'id',
  createdBy: 'createdBy',
  updatedBy: 'updatedBy'
};

exports.Prisma.SuppliersScalarFieldEnum = {
  id: 'id',
  name: 'name',
  address: 'address',
  phone: 'phone',
  email: 'email',
  createdAt: 'createdAt',
  createdBy: 'createdBy',
  updatedAt: 'updatedAt',
  updatedBy: 'updatedBy'
};

exports.Prisma.MaterialsScalarFieldEnum = {
  id: 'id',
  name: 'name',
  description: 'description',
  createdAt: 'createdAt',
  createdBy: 'createdBy',
  updatedAt: 'updatedAt',
  updatedBy: 'updatedBy'
};

exports.Prisma.ConditionsScalarFieldEnum = {
  id: 'id',
  name: 'name',
  description: 'description',
  createdAt: 'createdAt',
  createdBy: 'createdBy',
  updatedAt: 'updatedAt',
  updatedBy: 'updatedBy'
};

exports.Prisma.ParametersScalarFieldEnum = {
  id: 'id',
  name: 'name',
  unit: 'unit',
  type: 'type',
  createdAt: 'createdAt',
  createdBy: 'createdBy',
  updatedAt: 'updatedAt',
  updatedBy: 'updatedBy'
};

exports.Prisma.ArrivalsScalarFieldEnum = {
  id: 'id',
  idKedatangan: 'idKedatangan',
  supplierId: 'supplierId',
  arrivalDate: 'arrivalDate',
  arrivalTime: 'arrivalTime',
  nopol: 'nopol',
  suratJalan: 'suratJalan',
  city: 'city',
  note: 'note',
  createdAt: 'createdAt',
  createdBy: 'createdBy',
  updatedAt: 'updatedAt',
  updatedBy: 'updatedBy'
};

exports.Prisma.ArrivalItemsScalarFieldEnum = {
  id: 'id',
  arrivalId: 'arrivalId',
  materialId: 'materialId',
  conditionId: 'conditionId',
  parameterId: 'parameterId',
  conditionCategory: 'conditionCategory',
  quantity: 'quantity',
  note: 'note',
  itemName: 'itemName',
  qcNote: 'qcNote',
  qcStatusId: 'qcStatusId',
  qcAnalysis: 'qcAnalysis',
  qcSample: 'qcSample',
  qcKotoran: 'qcKotoran',
  totalBerat: 'totalBerat',
  pengeringan: 'pengeringan',
  createdAt: 'createdAt',
  createdBy: 'createdBy',
  updatedAt: 'updatedAt',
  updatedBy: 'updatedBy',
  statusQc: 'statusQc'
};

exports.Prisma.WeighingsScalarFieldEnum = {
  id: 'id',
  arrivalItemId: 'arrivalItemId',
  weight: 'weight',
  note: 'note',
  weighingDate: 'weighingDate',
  createdAt: 'createdAt',
  createdBy: 'createdBy',
  updatedAt: 'updatedAt',
  updatedBy: 'updatedBy'
};

exports.Prisma.NotificationsScalarFieldEnum = {
  id: 'id',
  table: 'table',
  description: 'description',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.QcResultsScalarFieldEnum = {
  id: 'id',
  arrivalItemId: 'arrivalItemId',
  parameterId: 'parameterId',
  historyId: 'historyId',
  resultKey: 'resultKey',
  value: 'value',
  createdAt: 'createdAt',
  createdBy: 'createdBy',
  updatedAt: 'updatedAt',
  updatedBy: 'updatedBy'
};

exports.Prisma.QcStatusScalarFieldEnum = {
  id: 'id',
  name: 'name',
  description: 'description'
};

exports.Prisma.QcPhotosScalarFieldEnum = {
  id: 'id',
  arrivalItemId: 'arrivalItemId',
  photo: 'photo',
  createdAt: 'createdAt',
  createdBy: 'createdBy',
  updatedAt: 'updatedAt',
  updatedBy: 'updatedBy'
};

exports.Prisma.SecurityPhotosScalarFieldEnum = {
  id: 'id',
  arrivalId: 'arrivalId',
  photo: 'photo',
  createdAt: 'createdAt',
  createdBy: 'createdBy',
  updatedAt: 'updatedAt',
  updatedBy: 'updatedBy'
};

exports.Prisma.WeighingsPhotosScalarFieldEnum = {
  id: 'id',
  arrivalItemId: 'arrivalItemId',
  photo: 'photo',
  createdAt: 'createdAt',
  createdBy: 'createdBy',
  updatedAt: 'updatedAt',
  updatedBy: 'updatedBy'
};

exports.Prisma.QcHistoriesScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  statusId: 'statusId',
  arrivalId: 'arrivalId',
  arrivalItemId: 'arrivalItemId',
  qcSample: 'qcSample',
  qcKotoran: 'qcKotoran',
  totalBerat: 'totalBerat',
  pengeringan: 'pengeringan',
  note: 'note',
  qcNote: 'qcNote',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ArrivalStatusesScalarFieldEnum = {
  id: 'id',
  arrivalId: 'arrivalId',
  status: 'status',
  statusQc: 'statusQc',
  statusWeighing: 'statusWeighing',
  statusApproval: 'statusApproval',
  createdAt: 'createdAt',
  createdBy: 'createdBy',
  updatedAt: 'updatedAt',
  updatedBy: 'updatedBy'
};

exports.Prisma.ParameterSettingsScalarFieldEnum = {
  id: 'id',
  parameterId: 'parameterId',
  key: 'key',
  value: 'value',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  createdBy: 'createdBy',
  updatedBy: 'updatedBy'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.UsersOrderByRelevanceFieldEnum = {
  username: 'username',
  email: 'email',
  password: 'password',
  role: 'role',
  id: 'id',
  createdBy: 'createdBy',
  updatedBy: 'updatedBy'
};

exports.Prisma.SuppliersOrderByRelevanceFieldEnum = {
  name: 'name',
  address: 'address',
  phone: 'phone',
  email: 'email',
  createdBy: 'createdBy',
  updatedBy: 'updatedBy'
};

exports.Prisma.MaterialsOrderByRelevanceFieldEnum = {
  name: 'name',
  description: 'description',
  createdBy: 'createdBy',
  updatedBy: 'updatedBy'
};

exports.Prisma.ConditionsOrderByRelevanceFieldEnum = {
  name: 'name',
  description: 'description',
  createdBy: 'createdBy',
  updatedBy: 'updatedBy'
};

exports.Prisma.ParametersOrderByRelevanceFieldEnum = {
  name: 'name',
  unit: 'unit',
  type: 'type',
  createdBy: 'createdBy',
  updatedBy: 'updatedBy'
};

exports.Prisma.ArrivalsOrderByRelevanceFieldEnum = {
  idKedatangan: 'idKedatangan',
  arrivalTime: 'arrivalTime',
  nopol: 'nopol',
  suratJalan: 'suratJalan',
  city: 'city',
  note: 'note',
  createdBy: 'createdBy',
  updatedBy: 'updatedBy'
};

exports.Prisma.ArrivalItemsOrderByRelevanceFieldEnum = {
  conditionCategory: 'conditionCategory',
  note: 'note',
  itemName: 'itemName',
  qcNote: 'qcNote',
  qcAnalysis: 'qcAnalysis',
  createdBy: 'createdBy',
  updatedBy: 'updatedBy'
};

exports.Prisma.WeighingsOrderByRelevanceFieldEnum = {
  note: 'note',
  createdBy: 'createdBy',
  updatedBy: 'updatedBy'
};

exports.Prisma.NotificationsOrderByRelevanceFieldEnum = {
  table: 'table',
  description: 'description'
};

exports.Prisma.QcResultsOrderByRelevanceFieldEnum = {
  resultKey: 'resultKey',
  value: 'value',
  createdBy: 'createdBy',
  updatedBy: 'updatedBy'
};

exports.Prisma.QcStatusOrderByRelevanceFieldEnum = {
  name: 'name',
  description: 'description'
};

exports.Prisma.QcPhotosOrderByRelevanceFieldEnum = {
  photo: 'photo',
  createdBy: 'createdBy',
  updatedBy: 'updatedBy'
};

exports.Prisma.SecurityPhotosOrderByRelevanceFieldEnum = {
  photo: 'photo',
  createdBy: 'createdBy',
  updatedBy: 'updatedBy'
};

exports.Prisma.WeighingsPhotosOrderByRelevanceFieldEnum = {
  photo: 'photo',
  createdBy: 'createdBy',
  updatedBy: 'updatedBy'
};

exports.Prisma.QcHistoriesOrderByRelevanceFieldEnum = {
  userId: 'userId',
  note: 'note',
  qcNote: 'qcNote'
};

exports.Prisma.ArrivalStatusesOrderByRelevanceFieldEnum = {
  status: 'status',
  statusQc: 'statusQc',
  statusWeighing: 'statusWeighing',
  statusApproval: 'statusApproval',
  createdBy: 'createdBy',
  updatedBy: 'updatedBy'
};

exports.Prisma.ParameterSettingsOrderByRelevanceFieldEnum = {
  key: 'key',
  value: 'value',
  createdBy: 'createdBy',
  updatedBy: 'updatedBy'
};


exports.Prisma.ModelName = {
  Users: 'Users',
  Suppliers: 'Suppliers',
  Materials: 'Materials',
  Conditions: 'Conditions',
  Parameters: 'Parameters',
  Arrivals: 'Arrivals',
  ArrivalItems: 'ArrivalItems',
  Weighings: 'Weighings',
  Notifications: 'Notifications',
  QcResults: 'QcResults',
  QcStatus: 'QcStatus',
  QcPhotos: 'QcPhotos',
  SecurityPhotos: 'SecurityPhotos',
  WeighingsPhotos: 'WeighingsPhotos',
  QcHistories: 'QcHistories',
  ArrivalStatuses: 'ArrivalStatuses',
  ParameterSettings: 'ParameterSettings'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
